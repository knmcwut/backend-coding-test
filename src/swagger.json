{
    "swagger": "2.0",
    "info": {
      "description": "Backend API for rides",
      "version": "1.0.0",
      "title": "Rides",
      "contact": {
        "email": "ddevkenmc@gmail.com"
      }
    },
    "definitions": {
      "RideOutput": {
        "type": "object",
        "required": [
          "startLat",
          "startLong",
          "endLat",
          "endLong",
          "riderName",
          "driverName",
          "driverVehicle"
        ],
        "properties": {
          "rideID": {
            "type": "integer",
            "example": 1
          },
          "startLat": {
            "type": "integer",
            "minimum": -90,
            "maximum": 90,
            "example": 56
          },
          "startLong": {
            "type": "integer",
            "minimum": -180,
            "maximum": 180,
            "example": 127
          },
          "endLat": {
            "type": "integer",
            "minimum": -90,
            "maximum": 90,
            "example": 77
          },
          "endLong": {
            "type": "integer",
            "minimum": -180,
            "maximum": 180,
            "example": -18
          },
          "riderName": {
            "type": "string",
            "example": "Kevin"
          },
          "driverName": {
            "type": "string",
            "example": "Kenneth"
          },
          "driverVehicle": {
            "type": "string",
            "example": "Electric Car"
          },
          "created": {
            "type": "string",
            "example": "2021-08-31 11:53:33"
          }
        }
      },
      "RideInput": {
        "type": "object",
        "required": [
          "start_lat",
          "start_long",
          "end_lat",
          "end_long",
          "rider_name",
          "driver_name",
          "driver_vehicle"
        ],
        "properties": {
          "start_lat": {
            "type": "integer",
            "minimum": -90,
            "maximum": 90,
            "example": 56
          },
          "start_long": {
            "type": "integer",
            "minimum": -180,
            "maximum": 180,
            "example": 127
          },
          "end_lat": {
            "type": "integer",
            "minimum": -90,
            "maximum": 90,
            "example": 77
          },
          "end_long": {
            "type": "integer",
            "minimum": -180,
            "maximum": 180,
            "example": -18
          },
          "rider_name": {
            "type": "string",
            "example": "Kevin"
          },
          "driver_name": {
            "type": "string",
            "example": "Kenneth"
          },
          "driver_vehicle": {
            "type": "string",
            "example": "Electric Car"
          }
        }
      }
    },
    "paths": {
      "/health": {
        "get": {
          "summary": "Health check endpoint for the server",
          "description": "Checks if the server is running",
          "operationId": "healthcheck",
          "responses": {
            "200": {
              "description": "Server is up and running"
            }
          }
        }
      },
  
      "/rides": {
        "get": {
          "summary": "Get all saved rides",
          "description": "Get all saved rides",
          "produces": [
            "application/json"
          ],
          "operationId": "getRides",
          "responses": {
            "200": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/RideOutput"
                }
              },
              "description": "Successful operation"
            }
          }
        },
        "post": {
          "summary": "Add a new ride",
          "description": "Add a new ride",
          "operationId": "addRide",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "description": "Rider object that needs to be added",
              "required": true,
              "schema": {
                "$ref": "#/definitions/RideInput"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successfully added new ride"
            }
          }
        }
      },
  
      "/rides/{rideId}": {
        "get": {
          "summary": "Get saved ride by id",
          "description": "Get saved ride by id",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "rideId",
              "in": "path",
              "description": "ID of ride to return",
              "required": true,
              "type": "integer"
            }
          ],
          "operationId": "getRideById",
          "responses": {
            "200": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/RideOutput"
                }
              },
              "description": "Successful operation"
            }
          }
        }
      }
    },
    "host": "localhost:8010",
    "basePath": "/"
  }